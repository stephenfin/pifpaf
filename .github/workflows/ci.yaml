---
# TODO: Change from ubuntu-20.04 (focal) to ubuntu-22.04 (jammy)
name: CI
on:
  push:
  pull_request:
jobs:
  lint:
    name: Run linters
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: python -m pip install tox
      - name: Run tox
        run: tox -e pep8
  test:
    name: Run tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install Python dependencies
        run: python -m pip install tox
      - name: Install binary dependencies
        # TODO(stephenfin): Add couchdb, mongodb. Do we need mysql-server, postgresql?
        # NOTE: npm and nodejs are already installed
        run: |
          sudo apt-get update
          sudo apt-get install mysql-server redis-server zookeeper ceph librados-dev python3-dev gcc liberasurecode-dev liberasurecode1 postgresql libpq-dev etcd
      - name: Start PostgreSQL
        run: sudo systemctl start postgresql.service
      - name: Start MySQL
        run: sudo systemctl start mysql.service
      - name: Run tests (via tox)
        # Run tox using the version of Python in `PATH`
        run: tox -e py
  release:
    name: Upload release artifacts
    runs-on: ubuntu-20.04
    needs: test
    if: github.event_name == 'push'
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: python -m pip install build
      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/ .
      - name: Publish distribution to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Create release on GitHub
        id: create_release
        if: startsWith(github.ref, 'refs/tags')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Add sdist to release
        id: upload-release-asset
        if: startsWith(github.ref, 'refs/tags')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/git-pw-${{ github.ref }}.tar.gz
          asset_name: git-pw-${{ github.ref }}.tar.gz
          asset_content_type: application/gzip
